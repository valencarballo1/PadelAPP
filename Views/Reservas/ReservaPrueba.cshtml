
@{
    ViewBag.Title = "ReservaPrueba";
}
<div class="card">

    <div class="card-body row d-flex justify-content-around align-items-center">
        <div class="col-md-6 col-sm-12 col-12 d-flex justify-content-center align-items-center">
            <div class="p-1">
                <div class="card-title text-center">
                    CANCHA 1
                </div>
                <div class="form-group">
                    <label for="fecha">Selecciona una fecha:</label>
                    <input type="text" class="form-control" id="fecha" name="fecha" readonly data-id="1">
                </div>
                <div>
                    <label for="duracion">Duración de la reserva:</label>
                    <label class="form-check">
                        <input class="form-check-input duracionCheckbox" type="radio" name="radios" id="duracion60" value="60">
                        <span class="form-check-label">60 Minutos</span>
                    </label>

                    <label class="form-check">
                        <input class="form-check-input duracionCheckbox" type="radio" name="radios" id="duracion90" value="90">
                        <span class="form-check-label">90 Minutos</span>
                    </label>
                </div>
                <div class="form-group">
                    <label for="horario">Selecciona un horario:</label>
                    <select class="form-control" id="horario" name="horario"></select>
                </div>
                <div class="d-flex justify-content-center m-2">
                    <button class="btn btn-success" id="btnReserva">RESERVAR</button>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    const fecha = document.getElementById("fecha");
    const reservar = document.getElementById("btnReserva");
    let datosDeHorario;

    $(document).ready(function () {
        $('#fecha').datepicker({
            format: 'dd/mm/yyyy',
            language: 'es',
            autoclose: true,
            startDate: new Date(),
            todayHighlight: true
        });
    });

    $('#fecha').on('changeDate', function (e) {
        $('.duracionCheckbox:checked').prop('checked', false);
        $('#horario').empty();
        console.log("Nueva fecha seleccionada:", fecha.value);

        $.ajax({
            url: '@Url.Action("Load", "Horario")',
            type: 'GET',
            data: {
                idCancha: 1,
                fechaSeleccionada: fecha.value
            },

            success: function (data) {
                datosDeHorario = data;
            },
            error: function (error) {
                console.error('Error al obtener horarios:', error);
            }
        });

        $('.duracionCheckbox').on('change', function () {
            $("#horario").empty();
            duracion = parseInt($('.duracionCheckbox:checked').val());
            let horaInicio = 8;
            let horaFin = 24;

            for (let hora = horaInicio; hora < horaFin; hora++) {
                for (let minuto = 0; minuto < 60; minuto += duracion) {
                    let horaFormato = ('0' + hora).slice(-2);
                    let minutoFormato = ('0' + minuto).slice(-2);
                    let tiempo = horaFormato + ':' + minutoFormato;
                    $('#horario').append('<option class="text-light bg-success" value="' + tiempo + '">' + tiempo + '</option>');

                    if (duracion === 90) {
                        minuto += 30;
                        minutoFormato = ('0' + minuto).slice(-2);
                        tiempo = horaFormato + ':' + minutoFormato;
                        $('#horario').append('<option class="text-light bg-success" value="' + tiempo + '">' + tiempo + '</option>');
                    }
                }
            }
            if (datosDeHorario != null && datosDeHorario.length > 0) {
                deshabilitarHorarios(datosDeHorario, $('.duracionCheckbox').val());
            }
        });
    });

    function deshabilitarHorarios(datosDeHorario, duracionTurno) {
        let horarioNoDisponible;

        datosDeHorario.forEach(function (horario) {
            if (horario.HorarioDesde && horario.HorarioHasta) {
                const fechaDesde = new Date(parseInt(horario.HorarioDesde.substr(6))); // Obtener la fecha desde el formato de milisegundos
                const horaDesde = fechaDesde.getHours();
                const minutoDesde = fechaDesde.getMinutes();

                // Calcular el horario previo según la duración del turno
                const horaPrevio = horaDesde - Math.floor(duracionTurno / 60);
                const minutoPrevio = minutoDesde - (duracionTurno % 60);

                // Formatear el horario previo
                let valorHorarioPrevio = ('0' + horaPrevio).slice(-2) + ':' + ('0' + minutoPrevio).slice(-2);

                // Seleccionar la opción en el select
                horarioNoDisponible = $('#horario option[value="' + valorHorarioPrevio + '"]')[0];

                // Deshabilitar la opción
                $(horarioNoDisponible).prop('disabled', true);

                // Modificar las clases
                $(horarioNoDisponible).removeClass('text-light bg-success').addClass('text-light bg-danger');

            } else {
                console.error('El horario no es una cadena o un objeto válido:', horario);
            }
        });
    }

    reservar.addEventListener("click", function () {
        const horarioDeReserva = $('#horario').val();
        enEspera();
        if (usuarioId == null) {
            Swal.fire({
                title: "No iniciaste sesion!",
                text: "Para poder reservar inicie sesion!",
                icon: "info"
            });
            return false;
        }

        $.ajax({
            url: '@Url.Action("Reservar", "Reservas")',
            type: 'POST',
            data: {
                idCancha: 1,
                fechaSeleccionada: fecha.value,
                horarioDeReserva: horarioDeReserva,
                duracion: duracion,
                idUsuario: usuarioId
            },

            success: function (data) {
                enEspera("chau");
                if (data == true) {
                    Swal.fire({
                        title: "Reserva confirmada!",
                        text: "Tu reserva se completo con exito!",
                        icon: "success",
                        showConfirmButton: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            location.reload();
                        }
                    });
                } else {
                    Swal.fire({
                        title: "Error en la reserva!",
                        text: "No se pudo completar la reserva con exito, asegurate que la fecha este disponible!",
                        icon: "error"
                    });
                }
            },
            error: function (error) {
                enEspera("chau");
                Swal.fire({
                    title: "Error en la reserva!",
                    text: "Error en el servidor. intente nuevamente!",
                    icon: "error"
                });
                console.error('Error al guardar reserva:', error);
            }
        });
    });

</script>